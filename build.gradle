plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
}
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'io.spring.dependency-management'

group = 'com.barrettotte'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    //mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.codehaus.groovy:groovy-all:2.5.6'
    compile group: 'net.sf.jt400', name: 'jt400', version: '9.8', classifier: 'jt400_jdk8'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.1.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.1.4.RELEASE'
    
    //compile group: 'log4j', name: 'log4j', version: '1.2.17'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'

    testCompile 'org.mockito:mockito-core:2.27.0'
    testCompile 'org.mockito:mockito-junit-jupiter:2.27.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("org.junit.jupiter:junit-jupiter:5.4.2")
}

sourceSets {
    main {
        java.srcDirs   = ['src/main/java']
        groovy.srcDirs = ['src/main/groovy']
    }
    test {
        java.srcDirs   = ['src/test/java']
        groovy.srcDirs = ['src/test/groovy']
    }
}

test {
    useJUnitPlatform{
        //includeTags 'unitTest'
        includeEngines 'junit-jupiter' //'junit-vintage'
    }
    testLogging {
        exceptionFormat = 'full'
        showExceptions true
        events 'PASSED', 'FAILED', 'SKIPPED'
        showStandardStreams = true
    }
    afterSuite { 
        desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: " +
                    "${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}
